{"version":3,"sources":["webpack:///./src/pages/techradar.tsx"],"names":["query","TechRadarPage","data","allMarkdownRemark","nodes","shortHeader","title","backURL","keywords"],"mappings":"0FAAA,yEA0BaA,EAAQ,YAsBNC,UAjCiC,SAAC,GAAkB,QAAhBC,KAAgB,cAAT,GAAS,GACvDC,kBADuD,gBACnB,GADmB,GAClCC,aADkC,MAC1B,GAD0B,EAG/D,OACI,kBAAC,IAAD,CAAQC,aAAW,EAACC,MAAM,aAAaC,QAAQ,KAC3C,kBAAC,IAAD,CAAKD,MAAM,aAAaE,SAAU,CAAC,MACnC,kBAAC,IAAD,CAAeJ,MAAOA","file":"component---src-pages-techradar-tsx-b6a297408d85ba820159.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\n\nimport { Layout, BlockRenderer, SEO } from '../components';\n\nimport { Node } from '../lib/type';\n\ninterface Props {\n    data: {\n        allMarkdownRemark: {\n            nodes: Node[];\n        };\n    };\n}\n\nconst TechRadarPage: FunctionComponent<Props> = ({ data = {} }) => {\n    const { allMarkdownRemark: { nodes = [] } = {} } = data;\n\n    return (\n        <Layout shortHeader title=\"Tech radar\" backURL=\"/\">\n            <SEO title=\"Tech radar\" keywords={['']} />\n            <BlockRenderer nodes={nodes} />\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query TechRadarPageQuery {\n        allMarkdownRemark(\n            sort: { fields: frontmatter___sort, order: ASC }\n            filter: { frontmatter: { pathname: { eq: \"/techradar/\" } } }\n        ) {\n            nodes {\n                id\n                html\n                rawMarkdownBody\n                frontmatter {\n                    graphics {\n                        author\n                        source\n                        sourceText\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default TechRadarPage;\n"],"sourceRoot":""}